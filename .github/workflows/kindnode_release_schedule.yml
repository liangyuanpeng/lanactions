#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: kindnode_release_schedule
on:
  push:
    branches: [ kindnode_release_schedule ]
  workflow_dispatch:
    inputs:
      k8sMinVersion:
        description: 'k8sMinVersion'
        required: false
        default: "v1.27.0"
        type: string
      kindVersion:
        description: 'kindVersion'
        required: false
        default: "stable"
        type: string
      tagWithKind:
        description: 'is it need to add kind version for tag'
        required: false
        default: true
        type: boolean
      onceCount:
        description: 'is it need to add kind version for tag'
        required: false
        default: 5
        type: number

  schedule:
    # - cron: '0 19 * * 0,1,2,3,4,5,6'
    - cron: '0 0,1,12,19 * * 0,1,2,3,4,5,6'
env:
  GH_TOKEN: ${{ github.token }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions: read-all

jobs:
# #/kind_build_auto kindVersion=v0.23.0&tagWithKind=true&k8sMinVersion=v1.27.0
  gettags:
    runs-on: ubuntu-24.04
    if: ${{ github.repository == 'liangyuanpeng/lanactions' || github.repository == 'lank8scn/lanactions' }}
    env:
      K8S_MIN_VERSION: ${{ inputs.k8sMinVersion }}
      ONCE_COUNT: ${{ inputs.onceCount }}
    outputs:
      ref: ${{ steps.gher.outputs.ref }}
      kindVersion: ${{ steps.gher.outputs.kindVersion }}
      tagslength: ${{ steps.gher.outputs.tagslength }}
    # strategy:
    #   max-parallel: 6
    #   fail-fast: false
    #   matrix:
    #     kindVersion:
    #     - ${{ inputs.kindVersion }}
    steps:
      - uses: oras-project/setup-oras@main
        with:
          version: 1.2.0
      - name: gher
        id: gher
        run: |
          export TAG_WITH_KIND=true
          echo "inputs.kindVersion:"${{ inputs.kindVersion }}
          export KIND_VERSION=${{ inputs.kindVersion }}
          if [ "${{ inputs.kindVersion }}" = "stable" ];then
            KIND_VERSION=`gh api repos/kubernetes-sigs/kind/tags --jq 'map(select(.name | contains("alpha") or contains("beta") | not)) | .[0].name'`
          fi
          if [ "${{ inputs.kindVersion }}" = "" ];then
            KIND_VERSION=`gh api repos/kubernetes-sigs/kind/tags --jq 'map(select(.name | contains("alpha") or contains("beta") | not)) | .[0].name'`
          fi
          echo "=======================kind version============================"
          echo $KIND_VERSION
          echo "=======================kind version============================"
          oras pull ghcr.io/lank8scn/files:gher 
          chmod +x gher 
          ./gher > tags.json
          cat tags.json
          list=$(cat tags.json | jq .tags | jq -c )
          tagslength=$(cat tags.json | jq '.tags | length' )
          echo "list:"${list}
          echo "tagslength:"${tagslength}
          echo "tagslength=${tagslength}" >> "$GITHUB_OUTPUT"
          echo "ref=${list}" >> "$GITHUB_OUTPUT"
          # echo "::set-output name=ref::${list} "  
          echo "kindVersion=$KIND_VERSION" >> "$GITHUB_OUTPUT"

  build:
    needs:
    - gettags
    uses: ./.github/workflows/kindnode_release_template.yml
    if: ${{ needs.gettags.outputs.tagslength > 0 }}
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
        ref: ${{ fromJson(needs.gettags.outputs.ref) }}
        kindVersion:
        - ${{ needs.gettags.outputs.kindVersion }}
        - latest
    with:
      ref: ${{ matrix.ref }}
      maketag: false
      repo: "kubernetes/kubernetes"
      kindVersion: ${{ matrix.kindVersion }}
      tagMode: "withRepoTag"

  getreleases:
    name: getreleases
    runs-on: ubuntu-24.04
    outputs:
      ref: ${{ steps.run.outputs.ref }}
      refslength: ${{ steps.run.outputs.refslength }}
    steps:
    - name: checkoutactions
      uses: actions/checkout@v4
    - uses: actions/setup-go@v5.0.2
      with:
        go-version-file: go.mod
    - name: go mod tidy
      run: |
        cd hack/release-latester
        go mod tidy 
    - name: run
      id: run
      run: |
        cd hack/release-latester
        export LATEST_COUNT=3
        if [ ${{ github.repository }} = 'lank8scn/lanactions' ];then
          LATEST_COUNT=10
        fi
        go run main.go > refs.json
        cat refs.json
        list=$(cat refs.json | jq .refs | jq -c )
        refslength=$(cat refs.json | jq '.refs | length' )
        echo "list:"${list}
        echo "refslength:"${refslength}
        echo "refslength=${refslength}" >> "$GITHUB_OUTPUT"
        echo "ref=${list}" >> "$GITHUB_OUTPUT"
        # echo "::set-output name=ref::${list}"  

  build-testnode:
    needs:
    - getreleases
    if: ${{ github.repository == 'lank8scn/lanactions' }}
    permissions:
      packages: write
    name: build-kindnode
    uses: ./.github/workflows/kindnode_release_template.yml
    strategy:
      fail-fast: false
      matrix:
        ref: ${{ fromJson(needs.getreleases.outputs.ref) }}
        # - master
        # - release-1.30
        # - release-1.29
        # - release-1.28
    with:
      repo: kubernetes/kubernetes
      ref: ${{ matrix.ref }}
      imgname: testnode
      checkCommit: "true"


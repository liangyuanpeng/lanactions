name: bot_command
on:
  push:
  workflow_dispatch:
    inputs:
      ref:
        description: 'source ref '
        required: false
        default: "main"
      repo:
        description: 'repo'
        required: false
        default: ""
      action:
        description: 'action'
        required: true
        default: ""
      prnum:
        description: 'prnum'
        required: false
        default: 0
        type: number
jobs:

  repush:
    if: inputs.action == "repush"
    name: repush
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: checkoutactions
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          fetch-depth: 0
          ref: ${{ inputs.ref }}

      - name: run 
        run: |
          #TODO 需要单独一个 gh token
          git config --global user.email "gcslyp@gmail.com"
          git config --global user.name "Lan Liang"
          COMMIT_MESSAGE=`git log --pretty=format:"%s" -1`
          git commit -s --amend -m "${COMMIT_MESSAGE}"
          git remote add upstream https://liangyuanpeng:$GH_TOKEN@github.com/${{ inputs.repo }}
          git branch -a
          git push upstream -f ${{ inputs.ref }}:${{ inputs.ref }}

  squash-pr:
    if: inputs.action == "squash-pr"
    name: squash
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: checkoutactions
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          fetch-depth: 0
          ref: ${{ inputs.ref }}

      - name: run 
        run: |
          echo "prnum:"${{ inputs.prnum }}
          #TODO 需要单独一个 gh token
          git config --global user.email "gcslyp@gmail.com"
          git config --global user.name "Lan Liang"
          PR_FIRST_COMMIT=`git log --format="%H" -2 | awk 'NR==2' | cut -d '|lan|' -f 2 `
          COMMIT_MESSAGE=`git log --pretty=format:"%s" -1`
          git commit -s --amend -m "${COMMIT_MESSAGE}"
          git remote add upstream https://liangyuanpeng:$GH_TOKEN@github.com/${{ inputs.repo }}
          git branch -a
          git push upstream -f ${{ inputs.ref }}:${{ inputs.ref }}

#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: k8s_ci_push
on:
  push:
    branches: [ k8s_ci_push ]
  workflow_dispatch:

permissions:
  packages: write

env:
  GH_TOKEN: ${{ github.token }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:


  getreleases:
    name: getreleases
    runs-on: ubuntu-24.04
    outputs:
      ref: ${{ steps.run.outputs.ref }}
      refslength: ${{ steps.run.outputs.refslength }}
    steps:
    - name: checkoutactions
      uses: actions/checkout@v4
    - uses: actions/setup-go@v5.0.2
      with:
        go-version-file: go.mod
    - name: go mod tidy
      run: |
        cd hack/release-latester
        go mod tidy 
    - name: run
      id: run
      run: |
        cd hack/release-latester
        go run main.go > refs.json
        cat refs.json
        list=$(cat refs.json | jq .refs | jq -c )
        refslength=$(cat refs.json | jq '.refs | length' )
        echo "list:"${list}
        echo "refslength:"${refslength}
        echo "refslength=${refslength}" >> "$GITHUB_OUTPUT"
        echo "ref=${list}" >> "$GITHUB_OUTPUT"
        # echo "::set-output name=ref::${list} "  

  build-kindnode:
    name: build-kindnode-${{ matrix.ref }}
    needs:
    - getreleases
    uses: ./.github/workflows/kindnode_release_template.yml
    strategy:
      max-parallel: 6
      fail-fast: false
      matrix:
        ref: ${{ fromJson(needs.getreleases.outputs.ref) }}
        # - master 
        # - release-1.30
        # - release-1.29
        # - release-1.28
    with:
      repo: kubernetes/kubernetes
      ref: ${{ matrix.ref }}
      imgname: testnode
      checkCommit: "true"

  k8sci:
    name: k8sci
    needs: 
    - getreleases
    - build-kindnode
    # if: always()
    uses: ./.github/workflows/k8s_ci.yml
    strategy:
      max-parallel: 6
      fail-fast: false
      matrix:
        tests:
          - conformance
          - conformance-nodes1
          - conformance-lease
          - conformance-sig-app
          # - conformance-sig-node
          - conformance-50
          # - conformance-aggregator
          # - sig-apps
          # - statefulset
        ref: ${{ fromJson(needs.getreleases.outputs.ref) }}
        # - master 
        # - release-1.30
        # - release-1.29
        # - release-1.28
    with:
      ref: ${{ matrix.ref }}
      testname: ${{ matrix.tests }}


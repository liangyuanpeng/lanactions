#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: arm
on:
  push:
    paths:
    - '.github/workflows/arm.yaml'
#TODO arm tests: etcd/bbolt/kubernetes/xline
jobs:

  linuxarm:
  #https://github.com/actions/partner-runner-images/blob/main/images/arm-ubuntu-22-image.md
    if: ${{ needs.getcommitid.outputs.linuxarm }}
    runs-on: arm-ubuntu-22
    steps:
      - name: run
        run: |
          env
          free -mh
          df -h

      - name: check 
        run: |
          docker ps

  macosarm:
    name: macosarm
    runs-on: macos-14
    steps:
      - name: run
        run: |
          env
      
      #fix https://github.com/kubernetes-sigs/kind/issues/3411
      # brew uninstall virtualbox
      # vbcask_url="https://raw.githubusercontent.com/Homebrew/homebrew-cask/aa3c55951fc9d687acce43e5c0338f42c1ddff7b/Casks/virtualbox.rb"
      # curl -LO $vbcask_url
      # brew install ./virtualbox.rb
      # rm ./virtualbox.rb
      - name: Set up Virtualbox
      #报错,安装不了  Error: Cask virtualbox depends on hardware architecture being one of [{:type=>:intel, :bits=>64}], but you are running {:type=>:arm, :bits=>64}.
        run: |
          brew install --cask vagrant
          brew install --cask virtualbox

  arm:
    name: arm 
    # The host should always be Linux
    runs-on: ubuntu-22.04
    steps:
      - name: checkoutactions
        uses: actions/checkout@v4
        with:
          repository: kubernetes/kubernetes
          fetch-depth: 0
          ref: ${{ inputs.ref }}
      - uses: actions/setup-go@v5.0.2
        with:
          go-version-file: go.mod
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          # arch: armv7
          distro: ubuntu22.04

          shell: /bin/sh

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          install: |
            apt-get update -q -y
            apt-get install -q -y git make wget curl
            case "${{ matrix.distro }}" in
              ubuntu*|jessie|stretch|buster|bullseye)
                apt-get update -q -y
                apt-get install -q -y git make
                make
                ;;
              fedora*)
                dnf -y update
                dnf -y install git which make
                ;;
              alpine*)
                apk update
                apk add git
                ;;
            esac

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            KUBE_BUILD_PLATFORMS=linux/arm64 make all

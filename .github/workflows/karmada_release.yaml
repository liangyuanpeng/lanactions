name: released image to DockerHub

on:
  workflow_call:
    inputs:
      repo:
        description: 'source repo'
        required: true
        type: string
      tag:
        description: 'image tag'
        required: true
        type: string
      ref:
        description: 'code ref'
        required: true
        type: string
    secrets:
      DOCKERHUB_USER_NAME:
        description: 'DOCKERHUB_USER_NAME'
        required: true
      DOCKERHUB_TOKEN:
        description: 'DOCKERHUB_TOKEN'
        required: true

jobs:
  publish-image-to-dockerhub:
    name: publish to DockerHub
    strategy:
      matrix:
        target:
          - karmada-controller-manager
          - karmada-scheduler
          - karmada-descheduler
          - karmada-webhook
          - karmada-agent
          - karmada-scheduler-estimator
          - karmada-interpreter-webhook-example
          - karmada-aggregated-apiserver
          - karmada-search
          - karmada-operator
          - karmada-metrics-adapter
    runs-on: ubuntu-22.04
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          # fetch-depth:
          # 0 indicates all history for all branches and tags.
          # for `git describe --tags` in Makefile.
          repository: ${{ inputs.repo }}
          fetch-depth: 0
          ref: ${{ inputs.ref }}
      - name: install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.20.6
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v1.13.1'
      - name: install QEMU
        uses: docker/setup-qemu-action@v2
      - name: install Buildx
        uses: docker/setup-buildx-action@v3
      - name: login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and publish images
        env:
          REGISTRY: lypgcs
          VERSION: ${{ inputs.tag }}
          # COSIGN_EXPERIMENTAL: 1
          # SIGN_IMAGE: 1
        run: make mp-image-${{ matrix.target }}

#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: k8s_ci_bak
on:
  push:
    branches: [ k8s_ci_bak ]
  workflow_dispatch:
    inputs:
      ref:
        description: 'source ref of kubernetes '
        required: false
        default: "master"
      repo:
        description: 'repo of kubernetes'
        required: false
        default: "kubernetes/kubernetes"

env:
  KIND_VERSION: "v0.23.0"

jobs:

  build-kind:
    name: build-kind
    permissions:
      packages: write
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - uses: oras-project/setup-oras@main
        with:
          version: 1.1.0
      - name: clean
        run: |
          nohup docker rmi `docker images -aq` &
          rm -rf /opt/hostedtoolcache/CodeQL
          rm -rf /opt/hostedtoolcache/node
          rm -rf /opt/hostedtoolcache/Python
      - name: make default value
        id: genoutputs
        env:
          REF: ${{ github.event.inputs.ref }}
          REPO: ${{ github.event.inputs.repo }}
        run: |
          if [ "$REF" = "" ];then
              echo "ref=master" >> "$GITHUB_OUTPUT"
          else
              echo "ref=$REF" >> "$GITHUB_OUTPUT"
          fi

          if [ "$REPO" = "" ];then
              echo "repo=kubernetes/kubernetes" >> "$GITHUB_OUTPUT"
          else
              echo "repo=$REPO" >> "$GITHUB_OUTPUT"
          fi

      # - name: checkout code
      #   run: |
      #     git clone https://github.com/${{ inputs.repo }}.git

      - name: checkoutactions
        uses: actions/checkout@v4
        with:
          repository: kubernetes/kubernetes
          # repository: ${{ inputs.repo }}
          fetch-depth: 0
          ref: ${{ inputs.ref }}

      - name: download kind
        run: |
          wget -q https://github.com/kubernetes-sigs/kind/releases/download/$KIND_VERSION/kind-linux-amd64
          chmod +x kind-linux-amd64 &&  mv kind-linux-amd64 /usr/local/bin/kind

      # Free up disk space on Ubuntu
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed, if set to "true" but frees about 6 GB
          tool-cache: false
          # all of these default to true, but feel free to set to "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: false

      - name: build kind node
        run: |
          docker login ghcr.io -uliangyuanpeng -p${{ secrets.GITHUB_TOKEN }}

          IMGTAG=`git describe --tags`
          IMAGE_EXIST=`oras manifest fetch ghcr.io/liangyuanpeng/kindest/testnode:$IMGTAG  | grep schemaVersion | wc -l `
          if [ $IMAGE_EXIST -eq 1 ]; then
            echo "this ID have info:$IMAGE_REGISTRY/$IMAGE:$tag"
            docker pull ghcr.io/liangyuanpeng/kindest/testnode:$IMGTAG
          else 
            mkdir tmp
            cd tmp
            kind build node-image --image ghcr.io/liangyuanpeng/kindest/testnode:$IMGTAG  --kube-root $PWD/../
            cd ..
            rm -rf tmp
            docker push ghcr.io/liangyuanpeng/kindest/testnode:$IMGTAG
          fi

  build-k8sbins:
    name: build-k8sbins
    permissions:
      packages: write
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - uses: oras-project/setup-oras@main
        with:
          version: 1.1.0
      - name: clean
        run: |
          nohup docker rmi `docker images -aq` &
          rm -rf /opt/hostedtoolcache/CodeQL
          rm -rf /opt/hostedtoolcache/node
          rm -rf /opt/hostedtoolcache/Python
      - name: make default value
        id: genoutputs
        env:
          REF: ${{ github.event.inputs.ref }}
          REPO: ${{ github.event.inputs.repo }}
        run: |
          if [ "$REF" = "" ];then
              echo "ref=master" >> "$GITHUB_OUTPUT"
          else
              echo "ref=$REF" >> "$GITHUB_OUTPUT"
          fi

          if [ "$REPO" = "" ];then
              echo "repo=kubernetes/kubernetes" >> "$GITHUB_OUTPUT"
          else
              echo "repo=$REPO" >> "$GITHUB_OUTPUT"
          fi

      # - name: checkout code
      #   run: |
      #     git clone https://github.com/${{ inputs.repo }}.git

      - name: checkoutactions
        uses: actions/checkout@v4
        with:
          repository: kubernetes/kubernetes
          # repository: ${{ inputs.repo }}
          fetch-depth: 0
          ref: ${{ inputs.ref }}

      # Free up disk space on Ubuntu
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed, if set to "true" but frees about 6 GB
          tool-cache: false
          # all of these default to true, but feel free to set to "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: false

      - name: build
        run: |
          IMGTAG=`git describe --tags`
          IMAGE_EXIST=`oras manifest fetch ghcr.io/liangyuanpeng/kubebins:$IMGTAG  | grep mediaType | wc -l `
          if [ $IMAGE_EXIST -eq 1 ]; then
            echo "exist "
          else 
            make
          fi

  e2e:
    name: e2e
    permissions:
      packages: write
    runs-on: ubuntu-22.04
    steps:

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - uses: oras-project/setup-oras@main
        with:
          version: 1.1.0

      - name: clean
        run: |
          nohup docker rmi `docker images -aq` &
          rm -rf /opt/hostedtoolcache/CodeQL
          rm -rf /opt/hostedtoolcache/node
          rm -rf /opt/hostedtoolcache/Python

      - name: make default value
        id: genoutputs
        env:
          REF: ${{ github.event.inputs.ref }}
          REPO: ${{ github.event.inputs.repo }}
        run: |
          if [ "$REF" = "" ];then
              echo "ref=master" >> "$GITHUB_OUTPUT"
          else
              echo "ref=$REF" >> "$GITHUB_OUTPUT"
          fi

          if [ "$REPO" = "" ];then
              echo "repo=kubernetes/kubernetes" >> "$GITHUB_OUTPUT"
          else
              echo "repo=$REPO" >> "$GITHUB_OUTPUT"
          fi

      # - name: checkout code
      #   run: |
      #     git clone https://github.com/${{ inputs.repo }}.git

      - name: checkoutactions
        uses: actions/checkout@v4
        with:
          repository: kubernetes/kubernetes
          # repository: ${{ inputs.repo }}
          fetch-depth: 0
          ref: ${{ inputs.ref }}

      - name: download kind
        run: |
          wget -q https://github.com/kubernetes-sigs/kind/releases/download/v0.23.0/kind-linux-amd64
          chmod +x kind-linux-amd64 &&  mv kind-linux-amd64 /usr/local/bin/kind
          # kind create cluster
          # kubectl get po -A

      # Free up disk space on Ubuntu
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed, if set to "true" but frees about 6 GB
          tool-cache: false
          # all of these default to true, but feel free to set to "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: false

      - name: build kind node
        run: |
          docker login ghcr.io -uliangyuanpeng -p${{ secrets.GITHUB_TOKEN }}

          IMGTAG=`git describe --tags`
          IMAGE_EXIST=`oras manifest fetch ghcr.io/liangyuanpeng/kindest/testnode:$IMGTAG  | grep schemaVersion | wc -l `
          if [ $IMAGE_EXIST -eq 1 ]; then
            echo "this ID have info:$IMAGE_REGISTRY/$IMAGE:$tag"
            docker pull ghcr.io/liangyuanpeng/kindest/testnode:$IMGTAG
          else 
            mkdir tmp
            cd tmp
            kind build node-image --image ghcr.io/liangyuanpeng/kindest/testnode:$IMGTAG  --kube-root $PWD/../
            cd ..
            rm -rf tmp
            docker push ghcr.io/liangyuanpeng/kindest/testnode:$IMGTAG
          fi

      - name: create cluster with kind 
        run: |
          IMGTAG=`git describe --tags`
          cat <<EOF | /usr/local/bin/kind create cluster \
            --name kind           \
            -v7 --wait 1m --retain --config=-
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          networking:
            ipFamily: ipv4
          nodes:
            - role: control-plane
              image: ghcr.io/liangyuanpeng/kindest/testnode:$IMGTAG
            - role: worker
              image: ghcr.io/liangyuanpeng/kindest/testnode:$IMGTAG
            - role: worker
              image: ghcr.io/liangyuanpeng/kindest/testnode:$IMGTAG
          EOF

          mkdir _artifacts
          cp ~/.kube/config _artifacts/
          mkdir -p _artifacts/testreport

      - name: build
        run: |
          IMGTAG=`git describe --tags`
          IMAGE_EXIST=`oras manifest fetch ghcr.io/liangyuanpeng/kubebins:$IMGTAG  | grep mediaType | wc -l `
          if [ $IMAGE_EXIST -eq 1 ]; then
            mkdir -p _output/bin
            cd _output/bin
            oras pull ghcr.io/liangyuanpeng/kubebins:$IMGTAG
            chmod +x ./*
            cd ../..
          else 
            make
          fi

      - name: run test 
        run: |
          IMGTAG=`git describe --tags`
          cd _output/bin 
          bins=`ls .`
          oras push ghcr.io/liangyuanpeng/kubebins:$IMGTAG $bins
          cd ../..
          mv _output/bin/* /usr/local/bin/

          ginkgo --nodes=25                \
          --focus="\[Conformance\]"     \
          --skip="Feature|Federation|machinery|PerformanceDNS|DualStack|Disruptive|Serial|Slow|KubeProxy|LoadBalancer|GCE|Netpol|NetworkPolicy|NodeConformance"   \
          /usr/local/bin/e2e.test                       \
          --                                            \
          --kubeconfig=${PWD}/_artifacts/config     \
          --provider=local                              \
          --dump-logs-on-failure=false                  \
          --report-dir=${PWD}/_artifacts/testreport            \
          --disable-log-dump=true


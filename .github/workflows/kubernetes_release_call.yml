#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: release_kubernetes_latest
on:
  push:
    branches: [ build_k8s ]
  schedule:
    # - cron: '0 0 * * 0,1,2,3,4,5,6'
    - cron: '0 19 * * 6'
  workflow_dispatch:
    inputs:
      ref:
        description: 'source ref of kubernetes '
        required: false
        default: "master"
        type: string
      repo:
        description: 'kubernetes/kubernetes'
        required: false
        default: "kubernetes/kubernetes"
        type: string
        
permissions:
  packages: write

env:
  GH_TOKEN: ${{ github.token }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  getreleases:
    name: getreleases
    runs-on: ubuntu-24.04
    outputs:
      ref: ${{ steps.run.outputs.ref }}
      refslength: ${{ steps.run.outputs.refslength }}
    steps:
    - name: checkoutactions
      uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
    - name: go mod tidy
      run: |
        cd hack/release-latester
        go mod tidy 
    - name: run
      id: run
      run: |
        cd hack/release-latester
        export LATEST_COUNT=3
        if [ ${{ github.repository }} = 'lank8scn/lanactions' ];then
          LATEST_COUNT=8
        fi
        go run main.go > refs.json
        cat refs.json
        list=$(cat refs.json | jq .refs | jq -c )
        refslength=$(cat refs.json | jq '.refs | length' )
        echo "list:"${list}
        echo "refslength:"${refslength}
        echo "refslength=${refslength}" >> "$GITHUB_OUTPUT"
        echo "ref=${list}" >> "$GITHUB_OUTPUT"
        # echo "::set-output name=ref::${list}"  


  buildk8s-test:
    name: buildk8s-test
    needs:
    - getreleases
    uses: ./.github/workflows/kubernetes_release_template.yml
    strategy:
      fail-fast: false
      matrix:
        ref: ${{ fromJson(needs.getreleases.outputs.ref) }}
    with:
      ref: ${{ matrix.ref }}
      imgrepo: k8s
      
  buildk8s:
    name: buildk8s
    needs:
    - getreleases
    uses: ./.github/workflows/kubernetes_release_template.yml
    strategy:
      fail-fast: false
      matrix:
        ref: ${{ fromJson(needs.getreleases.outputs.ref) }}
        # - master
        # - release-1.30
        # - release-1.29
        # - release-1.28
        # - release-1.27
        # - release-1.26
    with:
      ref: ${{ matrix.ref }}

  buildk8sdev:
    name: buildk8s-dev
    uses: ./.github/workflows/kubernetes_release_template.yml
    strategy:
      fail-fast: false
      matrix:
        ref: 
        - vap_dev
        - test_log
        - split_healthz_scheduler
        - aa_metrics
        repo:
        - liangyuanpeng/kubernetes
    with:
      ref: ${{ matrix.ref }}
      repo: ${{ matrix.repo }}


#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: frpc_kind
on:
  workflow_dispatch:
    inputs:
      port:
        description: 'port'
        required: true
      custom:
        description: "custom query param"
        required: false
      initimg:
        description: 'initimg'
        required: false
      timeout:
        description: 'timeout'
        required: false
        default: 120
        type: number 
  # pull_request:

jobs:

  frpc:
    name: start_frpc
    runs-on: ubuntu-20.04
    timeout-minutes: 180
    permissions:
      packages: write
    # if: ${{ github.event.workflow_run  }}
    steps:
      - name: checkoutactions
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: mv frpc.tar
        run: |
          mv frpc.tar /tmp/frpc.tar
          docker run -it -d --rm docker:stable docker pull kindest/node:v1.26.3

      - uses: oras-project/setup-oras@v1
        with:
          version: 1.0.0

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.26.3

      # - name: Create kind cluster
      #   uses: helm/kind-action@v1
      #   with:
      #     version: v0.18.0
      #     node_image: kindest/node:${{ matrix.kubernetes }}
      #     cluster_name: kind
      #     config: test/kind/config.yaml
      #     wait: 120s

      - name: run frpc
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_PACKAGE_TOKEN }}
          FRPC_PORT: ${{ inputs.port }}
          WORKSPACE: kind
          SYSTEM: debian
        run: |
          docker run -it -d --rm docker:stable docker pull kindest/node:v1.26.3
          oras login ghcr.io -uliangyuanpeng -p${{ secrets.GH_PACKAGE_TOKEN }}
          mv /tmp/frpc.tar .
          tar -xvf frpc.tar && cd frpc
          cat frpc.ini
          sed -i 's/FRPC_PORT/${{ inputs.port }}/g' frpc.ini
          sed -i 's/FRPC_NAME/gh_kind_${{ inputs.port }}/g' frpc.ini
          sed -i 's/FRP_SERVER/${{ secrets.FRP_SERVER_ADDR }}/g' frpc.ini
          sed -i 's/FRP_PORT/${{ secrets.FRP_SERVER_PORT }}/g' frpc.ini
          sed -i 's/FRPC_LOCAL_PORT/9443/g' frpc.ini
          cd ..
          sed -i 's/FRP_SERVER/${{ secrets.FRP_SERVER_ADDR }}/g' kind-config
          oras pull ghcr.io/liangyuanpeng/lanfiles:ghdev
          chmod +x init.sh
          ./init.sh
          ./install.sh
          export CLUSTER_HOST=0.0.0.0
          export CLUSTER_NAME=kind
          export KUBECONFIG=/tmp/admin.conf
          ./setup.sh
          touch nohup.out && cat nohup.out
          chmod -R 777 /tmp/admin.conf
          cp /tmp/admin.conf /tmp/adminorg.conf
          sed -i 's/127.0.0.1/${{ secrets.FRP_SERVER_ADDR }}/g' /tmp/admin.conf
          sed -i 's/9443/${{ inputs.port }}/g' /tmp/admin.conf
          cp /tmp/admin.conf ./
          cat /tmp/admin.conf
          mv admin.conf ghkf${{ inputs.port }}.conf
          rm -f admin.conf
          oras push ghcr.io/liangyuanpeng/lanfiles:ghkf${{ inputs.port }} -uliangyuanpeng -p$GH_TOKEN ghkf${{ inputs.port }}.conf
          rm -f ghkf${{ inputs.port }}.conf

      - name: upload file to slack
        uses: adrey/slack-file-upload-action@master
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          path: /tmp/admin.conf
          channel: lanren
          title: kubefile${{ inputs.port }}

      - name: kindinit 
        env:
          GH_TOKEN: ${{ secrets.GH_PACKAGE_TOKEN }}
        run: |
          oras pull -uliangyuanpeng -p$GH_TOKEN ghcr.io/liangyuanpeng/lanfiles:kindinit
          sh kindinit.sh ${{ inputs.custom }}

      - name: start frpc 
        run: |
          frpc/frpc -c frpc/frpc.ini

  active:
    name: print
    runs-on: ubuntu-20.04
    steps:
      - name: checkoutactions
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - run: |
          env

#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: frpc_kind
on:
  workflow_dispatch:
    inputs:
      port:
        description: 'port'
        required: true
      custom:
        description: "custom query param"
        required: false
      initimg:
        description: 'initimg'
        required: false
      timeout:
        description: 'timeout'
        required: false
        default: 120
        type: number 
  # pull_request:

jobs:

  frpc:
    name: start_frpc
    runs-on: ubuntu-22.04
    timeout-minutes: 180
    permissions:
      packages: write
    # if: ${{ github.event.workflow_run  }}
    steps:
      - name: checkoutactions
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: genoutputs
        id: genoutputs
        run: |
          oras pull -uliangyuanpeng -p${{ secrets.GH_PACKAGE_TOKEN }} ghcr.io/liangyuanpeng/lanfiles:kindinit
          chmod +x actionops.sh
          ./actionops.sh

      - name: print outputs
        run: |
          echo "goversion is" ${{ steps.genoutputs.outputs.goversion }}
          echo "ffmpeg is" ${{ steps.genoutputs.outputs.ffmpeg }}
          echo "graalvm is" ${{ steps.genoutputs.outputs.graalvm }}
          echo "rsdev is" ${{ steps.genoutputs.outputs.rsdev }}
          echo "rustversion is" ${{ steps.genoutputs.outputs.rustversion }}

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.genoutputs.outputs.goversion }}

      - uses: FedericoCarboni/setup-ffmpeg@v2
        if: steps.genoutputs.outputs.ffmpeg == 'true'
        id: setup-ffmpeg
        
      - uses: oras-project/setup-oras@v1
        with:
          version: 1.0.0

      - uses: graalvm/setup-graalvm@v1
        if: steps.genoutputs.outputs.graalvm == 'true'
        with:
          java-version: '17'
          version: '22.3.2' # Old 'version' option for the GraalVM version
          # java-version: '17.0.7'
          # distribution: 'graalvm' # See 'Options' for all available distributions

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.26.3

      - uses: actions-rs/toolchain@v1
        if: steps.genoutputs.outputs.rsdev == 'true'
        with:
          profile: default
          toolchain: ${{ steps.genoutputs.outputs.rustversion }}
          override: true

      # - name: Create kind cluster
      #   uses: helm/kind-action@v1
      #   with:
      #     version: v0.18.0
      #     node_image: kindest/node:${{ matrix.kubernetes }}
      #     cluster_name: kind
      #     config: test/kind/config.yaml
      #     wait: 120s

      - name: kindinit
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_PACKAGE_TOKEN }}
          FRPC_PORT: ${{ inputs.port }}
          FRP_SERVER_PORT: ${{ secrets.FRP_SERVER_PORT }}
          FRP_SERVER_ADDR: ${{ secrets.FRP_SERVER_ADDR }}
          WORKSPACE: kind
          SYSTEM: debian
        run: |
          oras pull -uliangyuanpeng -p$GH_TOKEN ghcr.io/liangyuanpeng/lanfiles:kindinit
          oras pull -uliangyuanpeng -p$GH_TOKEN ghcr.io/liangyuanpeng/lanfiles:envinit
          chmod +x kindinit.sh
          chmod +x setup.sh
          ./kindinit.sh

      - name: upload file to slack
        uses: adrey/slack-file-upload-action@master
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          path: /tmp/admin.conf
          channel: lanren
          title: kubefile${{ inputs.port }}

      - name: envinit
        env:
          GH_TOKEN: ${{ secrets.GH_PACKAGE_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          FRPC_PORT: ${{ inputs.port }}
          WORKSPACE: kind
          SYSTEM: debian
        run: |
          chmod +x envinit.sh
          frpc/frpc -c frpc/frpc.ini & ./envinit.sh ${{ inputs.custom }} & sleep 10h

      # - name: start frpc 
      #   run: |
      #     frpc/frpc -c frpc/frpc.ini

  active:
    name: print
    runs-on: ubuntu-latest
    steps:
      - name: checkoutactions
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - run: |
          env

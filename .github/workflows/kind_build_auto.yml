#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: kind_build_auto
on:
  push:
    branches: [ kind_build_auto ]
  workflow_dispatch:
    inputs:
      k8sMinVersion:
        description: 'k8sMinVersion'
        required: false
        default: "v1.27.0"
        type: string
      kindVersion:
        description: 'kindVersion'
        required: false
        default: "v0.22.0"
        type: string
      tagWithKind:
        description: 'is it need to add kind version for tag'
        required: false
        default: true
        type: boolean
      onceCount:
        description: 'is it need to add kind version for tag'
        required: false
        default: 5
        type: number

  schedule:
    - cron: '0 3 * * 0,1,2,3,4,5,6'
    # - cron: '0 3 * * 0,6'


jobs:
# #/kind_build_auto kindVersion=v0.19.0&tagWithKind=true&k8sMinVersion=v1.29.0
  gettags:
    runs-on: ubuntu-22.04
    if: ${{ github.repository == 'liangyuanpeng/lanactions' }}
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     TAG_WITH_KIND: ["0","1"]
    env:
      TAG_WITH_KIND: ${{ inputs.tagWithKind }}
      K8S_MIN_VERSION: ${{ inputs.k8sMinVersion }}
      ONCE_COUNT: ${{ inputs.onceCount }}
      KIND_VERSION: ${{ inputs.kindVersion }}
    outputs:
      ref: ${{ steps.gher.outputs.ref }}
      tagslength: ${{ steps.gher.outputs.tagslength }}
    steps:
      - uses: oras-project/setup-oras@v1
        with:
          version: 1.0.0
      - name: gher
        id: gher
        run: |
          oras pull ghcr.io/lank8scn/files:gher 
          chmod +x gher 
          ./gher > tags.json
          list=$(cat tags.json | jq .tags | jq -c )
          tagslength=$(cat tags.json | jq '.tags | length' )
          echo "list:"${list}
          echo "tagslength:"${tagslength}
          echo "tagslength=${tagslength}" >> "$GITHUB_OUTPUT"
          echo "ref=${list}" >> "$GITHUB_OUTPUT"
          # echo "::set-output name=ref::${list} "  

  build:
    needs:
    - gettags
    uses: ./.github/workflows/kind_build_release.yml
    if: ${{ needs.gettags.outputs.tagslength > 0 }}
    strategy:
      fail-fast: false
      matrix:
        ref: ${{ fromJson(needs.gettags.outputs.ref) }}
    with:
      ref: ${{ matrix.ref }}
      maketag: false
      repo: "kubernetes/kubernetes"
      tagWithKind: ${{ inputs.tagWithKind }}
      kindVersion: ${{ inputs.kindVersion }}
